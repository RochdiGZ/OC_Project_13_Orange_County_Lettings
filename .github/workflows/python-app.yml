# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: push

env:
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:${{ github.sha }}

jobs:

#   build-app:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python 3.11
#         uses: actions/setup-python@v3
#         with:
#           python-version: '3.11'
#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#       - name: Lint with Flake8
#         run: flake8
#       - name: Run Tests
#         run: pytest

#   build-image:
#     needs: build-app
#     if: ${{ github.ref == 'refs/heads/main'}}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Build docker image
#         run: |
#           docker build -t ${{ env.IMAGE_NAME }} .
#           docker save -o docker-image.tar ${{ env.IMAGE_NAME }}
#       - uses: actions/upload-artifact@v3
#         with:
#           name: dockerimage
#           path: docker-image.tar

#   push-image:
#     needs: build-image
#     if: ${{ github.ref == 'refs/heads/main'}}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/download-artifact@v3
#         with:
#           name: dockerimage
#       - name: Push docker image
#         run: |
#           docker load -i docker-image.tar
#           docker login -u ${{ env.DOCKERHUB_USERNAME }} -p ${{ env.DOCKERHUB_TOKEN }}
#           docker push ${{ env.IMAGE_NAME }}

  deploy-heroku:
    if: ${{ github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy docker image
        env:
          IMAGE_NAME: letting_test
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ vars.HEROKU_APP_NAME }}
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          docker tag ${{ env.IMAGE_NAME }} registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
          docker login -u _ -p${{ env.HEROKU_API_KEY }} registry.heroku.com
          docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
          heroku container:release web -a ${{ env.HEROKU_APP_NAME }}
